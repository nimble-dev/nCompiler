% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NF_Rderivs.R
\name{nDerivs}
\alias{nDerivs}
\title{nFunction Derivatives}
\usage{
nDerivs(nFxn = NA, order = c(0, 1, 2), dropArgs = NA, wrt = NULL)
}
\arguments{
\item{nFxn}{a call to a \code{nFunction} method with arguments 
included.  Can also be a call to  \code{model$calculate(nodes)}, or to 
\code{calculate(model, nodes)}.}

\item{order}{an integer vector with values within the set {0, 1, 2}, 
corresponding to whether the function value, Jacobian, and Hessian should be
 returned respectively.  Defaults to \code{c(0, 1, 2)}.}

\item{dropArgs}{a vector of integers specifying any arguments to 
\code{nFxn} that derivatives should not be taken with respect to.  For 
example, \code{dropArgs = 2} means that the second argument to \code{nFxn}
will not have derivatives taken with respect to it.  Defaults to an empty
vector.}

\item{wrt}{a character vector of either: names of function arguments 
(if taking derivatives of a \code{nFunction} method), or node names 
(if taking derivatives of \code{model$calculate(nodes)}) to take derivatives 
with respect to.  If left empty, derivatives will be taken with respect to 
all arguments to \code{nFxn}.}

\item{silent}{a logical argument that determines whether warnings will be
displayed.}
}
\value{
a \code{nimbleList} with elements \code{value}, \code{jacobian},
and \code{hessian}.
}
\description{
EXPERIMENTAL Computes the value, Jacobian, and Hessian of a given  
\code{nFunction} method.
}
\details{
Derivatives for uncompiled nFunctions are calculated using the
\code{numDeriv} package.  If this package is not installed, an error will
be issued.  Derivatives for matrix valued arguments will be returned in 
column-major order.
}
\examples{

\dontrun{
model <- nimbleModel(code = ...)
calcDerivs <- nimDerivs(model$calculate(model$getDependencies('x')),
 wrt = 'x')
}

}
