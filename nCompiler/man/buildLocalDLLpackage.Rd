% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/local_DLL.R
\name{buildLocalDLLpackage}
\alias{buildLocalDLLpackage}
\title{Create and install nCompLocal package}
\usage{
buildLocalDLLpackage(dir = file.path(tempdir(),
  get_nOption("localDLLdir")), create.dir = TRUE, installInR = FALSE,
  cleanup = TRUE)
}
\arguments{
\item{dir}{directory where nCompLocal package will be created and possibly installed.  The default value 
can be controlled by setting the.nOption for \code{localDLLdir} (see \link{set_nOption}).
In turn, this option be default is NULL, in which case R's session-specific temporary directory (\code{tempdir()})
will be used.  If \code{installInR} is \code{FALSE}, then \code{dir} will also be the location of of the installed 
package.  In such a case, the nCompLocal package will be re-created once in every R session that compiled with nCompiler.}

\item{create.dir}{\code{TRUE} if \code{dir} needs to be created (in which case there will be an error if \code{dir} already exists).}

\item{installInR}{\code{TRUE} if nCompLocal should be installed as a regular package in R.  Generally, this is a 
good idea, as it means that nCompLocal only needs to be created and installed once per installation.  Otherwise
these steps may happen once per session, which will be the case if \code{dir} is \code{NULL}.  It is also possible 
to install nCompLocal to a directory provided by \code{get_nOption("localDLLdir")} and leave it there.  In that
case, nCompiler will automatially find it there in future R sessions.}
}
\description{
Create and install nCompLocal package, which contains a static dynamic library (DLL)
on each user's machine for nCompiler-generated C++ to link to.
}
\details{
See \link{setup_nCompLocal} for the simplest way to install nCompLocal, which is as a standard R
package in the standard location.  \code{buildLocalDLLpackage} provides more control over where it will be
installed and where package source files will be written.
}
\seealso{
\link{setup_nCompLocal}
}
