% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/local_DLL.R
\name{setup_nCompLocal}
\alias{setup_nCompLocal}
\title{Create and install nCompLocal package as a regular R package.}
\usage{
setup_nCompLocal()
}
\description{
Create and install nCompLocal package, which contains a static dynamic library (DLL)
on each user's machine for nCompiler-generated C++ to link to.
}
\details{
nCompiler is faster and simpler if it can link on-the-fly C++ compilation to a static library
on each user's machine.  That static library is nCompLocal.  It is a somewhat unusual R package.  It
does not contain any R source code.  It does not contain the type of compiled shared library that packages
with C or C++ source code typically do.  Instead it contains a \code{staticLib} directory with a static
library.

A typical R package would not assume that a user's system has the compiler tools to build a package 
including C++ source code from source.  Since nCompiler requires compiler tools anyway, it is reasonable
to assume that dynamically building a package from source will work.

This function will install nCompLocal as a regular R package in the default location for packages.
For more control over where the package is installed, and where package source files are written, 
see \link{buildLocalDLLpackage}
}
\seealso{
\link{buildLocalDLLpackage}
}
